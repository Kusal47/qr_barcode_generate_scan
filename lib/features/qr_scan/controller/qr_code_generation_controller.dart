import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:scan_qr/core/widgets/common/toast.dart';
import 'package:share_plus/share_plus.dart';

import '../../../core/resources/export_resources.dart';
import '../../../core/widgets/export_custom_widget.dart';
import '../model/qr_generate_params.dart';

class QrCodeGenerationController extends GetxController {
  final TextEditingController urlcontroller = TextEditingController();
  final TextEditingController wifiNamecontroller = TextEditingController();
  final TextEditingController wifiPasswordcontroller = TextEditingController();
  final TextEditingController contactNamecontroller = TextEditingController();
  final TextEditingController contactNumbercontroller = TextEditingController();
  final TextEditingController contactEmailcontroller = TextEditingController();
  final TextEditingController contactAddresscontroller = TextEditingController();
  final TextEditingController textController = TextEditingController();
  final TextEditingController typeController = TextEditingController();
  QRGenerateParams? qrGenerateParams = QRGenerateParams();
  String qrData = "";

  final GlobalKey qrKey = GlobalKey();
  final formKey = GlobalKey<FormState>();

  List<String> qrDataList = ["URL", "Wi-Fi", "Contacts"];

  @override
  void onInit() {
    super.onInit();
    storagePermissionHandler();
  }

  storagePermissionHandler() async {
    var status = await Permission.storage.request();
    if (!status.isGranted) {
      throw Exception("Storage permission not granted");
    }
  }

  generateQr(QRGenerateParams qrGenerateParams) async {
    qrData = qrGenerateParams.generateQrString().toString();
    update();
  }

  downLoadQr() async {
    await captureAndSaveWidget(qrKey).then((value) {
      showSuccessToast("Image Downloaded!");
      openDownloadedFile(value);
    });
  }

  Future<void> shareQr(GlobalKey qrkey, {String? text}) async {
    final filePath = await shareQrFromBytes(qrkey);
    await shareFunction(
      text: text ?? 'Shared from ScanQR',
      subject: 'QR code generated by ScanQR',
      thummbnailPath: XFile(filePath),
      files: [XFile(filePath)],
    );
  }
}
